name: continuous delivery

on: [push]

env:
  REPOSITORY_NAME: iot-mini-project

jobs:
  build_unit_tests:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build image for all unit tests
      uses: docker/build-push-action@v5
      with:
        context: ${{ github.workspace }}/cloud
        push: true
        file: ${{ github.workspace }}/Dockerfile
        target: unit-tests
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{env.REPOSITORY_NAME}}:latest-unit-tests
        cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/${{env.REPOSITORY_NAME}}:latest-unit-tests-buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/${{env.REPOSITORY_NAME}}:latest-unit-tests-buildcache,mode=max


  build_acceptance_tests:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build image for all acceptance tests
      uses: docker/build-push-action@v5
      with:
        context: ${{ github.workspace }}/cloud
        push: true
        file: ${{ github.workspace }}/Dockerfile
        target: acceptance-tests
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{env.REPOSITORY_NAME}}:latest-acceptance-tests
        cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/${{env.REPOSITORY_NAME}}:latest-acceptance-tests-buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/${{env.REPOSITORY_NAME}}:latest-acceptance-tests-buildcache,mode=max


  run_commit_tests:
    runs-on: ubuntu-22.04
    needs: build_unit_tests

    steps:
      - name: Run all unit tests
        run: docker run --pull always --rm ${{ secrets.DOCKERHUB_USERNAME }}/${{env.REPOSITORY_NAME}}:latest-unit-tests


  build_datacollector_rc:
    runs-on: ubuntu-22.04
    needs: run_commit_tests

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
  
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
  
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
  
      - name: Build image for datacollector release candidate
        uses: docker/build-push-action@v5
        with:
          context: ${{ github.workspace }}/cloud
          push: true
          file: ${{ github.workspace }}/Dockerfile
          target: datacollector-production
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{env.REPOSITORY_NAME}}:rc-datacollector
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/${{env.REPOSITORY_NAME}}:rc-datacollector-buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/${{env.REPOSITORY_NAME}}:rc-datacollector-buildcache,mode=max


  run_acceptance_tests:
    runs-on: ubuntu-22.04
    needs: [run_commit_tests, build_acceptance_tests]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run all acceptance tests
      run: docker compose -f compose.yaml up --exit-code-from acceptance-tests
